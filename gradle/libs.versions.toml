[versions]
assertJ = "3.27.4"
gradleInfo = "14.0.0"
gradlePublish = "1.3.1"
jgit = "7.+"
jreleaser = "1.19.0"
junit = "5.13.4"
junitPlatform = "1.13.4"
nebulaContacts = "7.0.2"
nebulaPublish = "22.0.0"
nebulaRelease = "21.0.0"
nexusPublish = "2.0.0"
taskTree = "4.0.1"

[libraries]
assertJ = { module = "org.assertj:assertj-core", version.ref = "assertJ" }
gradleInfo = { module = "com.netflix.nebula:gradle-info-plugin", version.ref = "gradleInfo" }
jgit = { module = "org.eclipse.jgit:org.eclipse.jgit", version.ref = "jgit" }
jreleaser = { module = "org.jreleaser:org.jreleaser.gradle.plugin", version.ref = "jreleaser" }
junitApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junitJupiter = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junitParams = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
junitPlatformLauncher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junitPlatform" }
nebulaContacts = { module = "com.netflix.nebula:gradle-contacts-plugin", version.ref = "nebulaContacts" }
nebulaPublish = { module = "com.netflix.nebula:nebula-publishing-plugin", version.ref = "nebulaPublish" }
nebulaRelease = { module = "com.netflix.nebula:nebula-release-plugin", version.ref = "nebulaRelease" }
nexusPublish = { module = "io.github.gradle-nexus:publish-plugin", version.ref = "nexusPublish" }
taskTree = { module = "com.dorongold.plugins:task-tree", version.ref = "taskTree" }

[bundles]
junit = ["junitApi", "junitJupiter", "junitParams", "junitPlatformLauncher"]

[plugins]
gradlePublish = { id = "com.gradle.plugin-publish", version.ref = "gradlePublish" }
nebulaRelease = { id = "nebula.release", version.ref = "nebulaRelease" }
